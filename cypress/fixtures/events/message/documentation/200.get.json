{
  "results": [
    {
      "amp_enabled": {
        "description": "Indicates whether or not amp format was enabled",
        "sampleValue": true
      },
      "bounce_class": {
        "description": "Classification code for a given message (see [Bounce Classification Codes](https://support.sparkpost.com/customer/portal/articles/1929896))",
        "sampleValue": "1"
      },
      "campaign_id": {
        "description": "Campaign of which this message was a part",
        "sampleValue": "Example Campaign Name"
      },
      "click_tracking": {
        "description": "Indicates whether or not click tracking was enabled",
        "sampleValue": true
      },
      "customer_id": {
        "description": "SparkPost-customer identifier through which this message was sent",
        "sampleValue": "1"
      },
      "delv_method": {
        "description": "Protocol by which SparkPost delivered this message",
        "sampleValue": "esmtp"
      },
      "device_token": {
        "description": "Token of the device / application targeted by this PUSH notification message. Applies only when delv_method is gcm or apn.",
        "sampleValue": "45c19189783f867973f6e6a5cca60061ffe4fa77c547150563a1192fa9847f8a"
      },
      "error_code": {
        "description": "Error code by which the remote server described a failed delivery attempt",
        "sampleValue": "554"
      },
      "event_id": { "description": "Unique event identifier", "sampleValue": "92356927693813856" },
      "friendly_from": {
        "description": "Friendly sender or 'From' header in the original email",
        "sampleValue": "sender@example.com"
      },
      "initial_pixel": {
        "description": "Indicates whether or not initial open pixel tracking was enabled",
        "sampleValue": true
      },
      "injection_time": {
        "description": "Time at which this message was injected into SparkPost",
        "sampleValue": "2016-04-18T14:25:07.000Z"
      },
      "ip_address": {
        "description": "IP address of the host to which SparkPost delivered this message; in engagement events, the IP address of the host where the HTTP request originated",
        "sampleValue": "127.0.0.1"
      },
      "ip_pool": {
        "description": "IP pool through which this message was sent",
        "sampleValue": "example-ip-pool"
      },
      "message_id": {
        "description": "SparkPost-cluster-wide unique identifier for this message",
        "sampleValue": "000443ee14578172be22"
      },
      "msg_from": {
        "description": "Sender address used on this message's SMTP envelope",
        "sampleValue": "sender@example.com"
      },
      "msg_size": { "description": "Message's size in bytes", "sampleValue": "1337" },
      "num_retries": {
        "description": "Number of failed attempts before this message was successfully delivered; when the first attempt succeeds, zero",
        "sampleValue": "2"
      },
      "open_tracking": {
        "description": "Indicates whether or not open tracking was enabled",
        "sampleValue": true
      },
      "rcpt_meta": {
        "description": "Metadata describing the message recipient",
        "sampleValue": { "customKey": "customValue" }
      },
      "rcpt_tags": {
        "description": "Tags applied to the message which generated this event",
        "sampleValue": ["male", "US"]
      },
      "rcpt_to": {
        "description": "Lowercase version of recipient address used on this message's SMTP envelope",
        "sampleValue": "recipient@example.com"
      },
      "rcpt_hash": {
        "description": "Hashed version of recipient address used on this message's SMTP envelope",
        "sampleValue": "2aae6c35c94fcfb415dbe95f408b9ce91ee846ed"
      },
      "raw_rcpt_to": {
        "description": "Actual recipient address used on this message's SMTP envelope",
        "sampleValue": "recipient@example.com"
      },
      "rcpt_type": {
        "description": "Indicates that a recipient address appeared in the Cc or Bcc header or the archive JSON array",
        "sampleValue": "cc"
      },
      "raw_reason": {
        "description": "Unmodified, exact response returned by the remote server due to a failed delivery attempt",
        "sampleValue": "MAIL REFUSED - IP (17.99.99.99) is in block list"
      },
      "reason": {
        "description": "Canonicalized text of the response returned by the remote server due to a failed delivery attempt",
        "sampleValue": "MAIL REFUSED - IP (a.b.c.d) is in block list"
      },
      "recipient_domain": {
        "description": "Domain part of the recipient address used on this message's SMTP envelope",
        "sampleValue": "example.com"
      },
      "recv_method": {
        "description": "Protocol by which SparkPost received this message",
        "sampleValue": "esmtp"
      },
      "routing_domain": {
        "description": "Domain receiving this message",
        "sampleValue": "example.com"
      },
      "sending_domain": {
        "description": "Domain part of the sender or 'From' header in the original email",
        "sampleValue": "example.com"
      },
      "sending_ip": {
        "description": "IP address through which this message was sent",
        "sampleValue": "127.0.0.1"
      },
      "sms_coding": {
        "description": "Data encoding used in the SMS message",
        "sampleValue": "ASCII"
      },
      "sms_dst": { "description": "SMS destination address", "sampleValue": "7876712656" },
      "sms_dst_npi": {
        "description": "Destination numbering plan identification",
        "sampleValue": "E164"
      },
      "sms_dst_ton": {
        "description": "Type of number for the destination address",
        "sampleValue": "International"
      },
      "sms_src": { "description": "SMS source address", "sampleValue": "1234" },
      "sms_src_npi": {
        "description": "Source numbering plan identification",
        "sampleValue": "E164"
      },
      "sms_src_ton": {
        "description": "Type of number for the source address",
        "sampleValue": "Unknown"
      },
      "subaccount_id": { "description": "Unique subaccount identifier.", "sampleValue": "101" },
      "subject": {
        "description": "Subject line from the email header",
        "sampleValue": "Summer deals are here!"
      },
      "template_id": {
        "description": "Slug of the template used to construct this message",
        "sampleValue": "templ-1234"
      },
      "template_version": {
        "description": "Version of the template used to construct this message",
        "sampleValue": "1"
      },
      "timestamp": {
        "description": "Event date and time, millisecond precision in UTC",
        "sampleValue": "2019-06-16T19:02:09.373Z"
      },
      "transactional": {
        "description": "Indicates if the transmission was marked as transactional",
        "sampleValue": "1"
      },
      "transmission_id": {
        "description": "Transmission which originated this message",
        "sampleValue": "65832150921904138"
      },
      "type": { "description": "Type of event this record describes", "sampleValue": "bounce" },
      "display_name": {
        "sampleValue": "Bounce",
        "description": "Human readable label for the event name"
      },
      "event_description": {
        "sampleValue": "Remote MTA has permanently rejected a message.",
        "description": "Human readable description of the event"
      }
    },
    {
      "ab_test_id": {
        "description": "A/B test of which this event was a part.",
        "sampleValue": "password-reset"
      },
      "ab_test_version": {
        "description": "A/B test version that was used for this event.",
        "sampleValue": "1"
      },
      "amp_enabled": {
        "description": "Indicates whether or not amp format was enabled",
        "sampleValue": true
      },
      "campaign_id": {
        "description": "Campaign of which this message was a part",
        "sampleValue": "Example Campaign Name"
      },
      "click_tracking": {
        "description": "Indicates whether or not click tracking was enabled",
        "sampleValue": true
      },
      "customer_id": {
        "description": "SparkPost-customer identifier through which this message was sent",
        "sampleValue": "1"
      },
      "delv_method": {
        "description": "Protocol by which SparkPost delivered this message",
        "sampleValue": "esmtp"
      },
      "device_token": {
        "description": "Token of the device / application targeted by this PUSH notification message. Applies only when delv_method is gcm or apn.",
        "sampleValue": "45c19189783f867973f6e6a5cca60061ffe4fa77c547150563a1192fa9847f8a"
      },
      "event_id": { "description": "Unique event identifier", "sampleValue": "92356927693813856" },
      "friendly_from": {
        "description": "Friendly sender or 'From' header in the original email",
        "sampleValue": "sender@example.com"
      },
      "initial_pixel": {
        "description": "Indicates whether or not initial open pixel tracking was enabled",
        "sampleValue": true
      },
      "injection_time": {
        "description": "Time at which this message was injected into SparkPost",
        "sampleValue": "2016-04-18T14:25:07.000Z"
      },
      "ip_address": {
        "description": "IP address of the host to which SparkPost delivered this message; in engagement events, the IP address of the host where the HTTP request originated",
        "sampleValue": "127.0.0.1"
      },
      "ip_pool": {
        "description": "IP pool through which this message was sent",
        "sampleValue": "example-ip-pool"
      },
      "message_id": {
        "description": "SparkPost-cluster-wide unique identifier for this message",
        "sampleValue": "000443ee14578172be22"
      },
      "msg_from": {
        "description": "Sender address used on this message's SMTP envelope",
        "sampleValue": "sender@example.com"
      },
      "msg_size": { "description": "Message's size in bytes", "sampleValue": "1337" },
      "num_retries": {
        "description": "Number of failed attempts before this message was successfully delivered; when the first attempt succeeds, zero",
        "sampleValue": "2"
      },
      "open_tracking": {
        "description": "Indicates whether or not open tracking was enabled",
        "sampleValue": true
      },
      "outbound_tls": {
        "description": "Whether a message was sent using TLS or not. Specifies if a message wasn't sent with TLS either because no TLS was offered or TLS negotiation failed.",
        "sampleValue": -1
      },
      "queue_time": {
        "description": "Delay, expressed in milliseconds, between this message's injection into SparkPost and its delivery to the receiving domain; that is, the length of time this message spent in the outgoing queue",
        "sampleValue": "12"
      },
      "rcpt_meta": {
        "description": "Metadata describing the message recipient",
        "sampleValue": { "customKey": "customValue" }
      },
      "rcpt_tags": {
        "description": "Tags applied to the message which generated this event",
        "sampleValue": ["male", "US"]
      },
      "rcpt_to": {
        "description": "Lowercase version of recipient address used on this message's SMTP envelope",
        "sampleValue": "recipient@example.com"
      },
      "rcpt_hash": {
        "description": "Hashed version of recipient address used on this message's SMTP envelope",
        "sampleValue": "2aae6c35c94fcfb415dbe95f408b9ce91ee846ed"
      },
      "raw_rcpt_to": {
        "description": "Actual recipient address used on this message's SMTP envelope",
        "sampleValue": "recipient@example.com"
      },
      "rcpt_type": {
        "description": "Indicates that a recipient address appeared in the Cc or Bcc header or the archive JSON array",
        "sampleValue": "cc"
      },
      "recipient_domain": {
        "description": "Domain part of the recipient address used on this message's SMTP envelope",
        "sampleValue": "example.com"
      },
      "recv_method": {
        "description": "Protocol by which SparkPost received this message",
        "sampleValue": "esmtp"
      },
      "routing_domain": {
        "description": "Domain receiving this message",
        "sampleValue": "example.com"
      },
      "sending_domain": {
        "description": "Domain part of the sender or 'From' header in the original email",
        "sampleValue": "example.com"
      },
      "sending_ip": {
        "description": "IP address through which this message was sent",
        "sampleValue": "127.0.0.1"
      },
      "subaccount_id": { "description": "Unique subaccount identifier.", "sampleValue": "101" },
      "subject": {
        "description": "Subject line from the email header",
        "sampleValue": "Summer deals are here!"
      },
      "sms_coding": {
        "description": "Data encoding used in the SMS message",
        "sampleValue": "ASCII"
      },
      "sms_dst": { "description": "SMS destination address", "sampleValue": "7876712656" },
      "sms_dst_npi": {
        "description": "Destination numbering plan identification",
        "sampleValue": "E164"
      },
      "sms_dst_ton": {
        "description": "Type of number for the destination address",
        "sampleValue": "International"
      },
      "sms_remoteids": {
        "description": "The message ID(s) in the response, assigned by the remote server/SMSC",
        "sampleValue": ["0000", "0001", "0002", "0003", "0004"]
      },
      "sms_segments": {
        "description": "Segment number of the log line for large messages sent through multiple SMSes",
        "sampleValue": 5
      },
      "sms_src": { "description": "SMS source address", "sampleValue": "1234" },
      "sms_src_npi": {
        "description": "Source numbering plan identification",
        "sampleValue": "E164"
      },
      "sms_src_ton": {
        "description": "Type of number for the source address",
        "sampleValue": "Unknown"
      },
      "template_id": {
        "description": "Slug of the template used to construct this message",
        "sampleValue": "templ-1234"
      },
      "template_version": {
        "description": "Version of the template used to construct this message",
        "sampleValue": "1"
      },
      "timestamp": {
        "description": "Event date and time, millisecond precision in UTC",
        "sampleValue": "2019-06-16T19:02:09.373Z"
      },
      "transactional": {
        "description": "Indicates if the transmission was marked as transactional",
        "sampleValue": "1"
      },
      "transmission_id": {
        "description": "Transmission which originated this message",
        "sampleValue": "65832150921904138"
      },
      "type": { "description": "Type of event this record describes", "sampleValue": "delivery" },
      "display_name": {
        "sampleValue": "Delivery",
        "description": "Human readable label for the event name"
      },
      "event_description": {
        "sampleValue": "Remote MTA acknowledged receipt of a message.",
        "description": "Human readable description of the event"
      }
    },
    {
      "ab_test_id": {
        "description": "A/B test of which this event was a part.",
        "sampleValue": "password-reset"
      },
      "ab_test_version": {
        "description": "A/B test version that was used for this event.",
        "sampleValue": "1"
      },
      "amp_enabled": {
        "description": "Indicates whether or not amp format was enabled",
        "sampleValue": true
      },
      "campaign_id": {
        "description": "Campaign of which this message was a part",
        "sampleValue": "Example Campaign Name"
      },
      "click_tracking": {
        "description": "Indicates whether or not click tracking was enabled",
        "sampleValue": true
      },
      "customer_id": {
        "description": "SparkPost-customer identifier through which this message was sent",
        "sampleValue": "1"
      },
      "event_id": { "description": "Unique event identifier", "sampleValue": "92356927693813856" },
      "friendly_from": {
        "description": "Friendly sender or 'From' header in the original email",
        "sampleValue": "sender@example.com"
      },
      "initial_pixel": {
        "description": "Indicates whether or not initial open pixel tracking was enabled",
        "sampleValue": true
      },
      "injection_time": {
        "description": "Time at which this message was injected into SparkPost",
        "sampleValue": "2016-04-18T14:25:07.000Z"
      },
      "ip_pool": {
        "description": "IP pool through which this message was sent",
        "sampleValue": "example-ip-pool"
      },
      "message_id": {
        "description": "SparkPost-cluster-wide unique identifier for this message",
        "sampleValue": "000443ee14578172be22"
      },
      "msg_from": {
        "description": "Sender address used on this message's SMTP envelope",
        "sampleValue": "sender@example.com"
      },
      "msg_size": { "description": "Message's size in bytes", "sampleValue": "1337" },
      "open_tracking": {
        "description": "Indicates whether or not open tracking was enabled",
        "sampleValue": true
      },
      "rcpt_meta": {
        "description": "Metadata describing the message recipient",
        "sampleValue": { "customKey": "customValue" }
      },
      "rcpt_tags": {
        "description": "Tags applied to the message which generated this event",
        "sampleValue": ["male", "US"]
      },
      "rcpt_to": {
        "description": "Lowercase version of recipient address used on this message's SMTP envelope",
        "sampleValue": "recipient@example.com"
      },
      "rcpt_hash": {
        "description": "Hashed version of recipient address used on this message's SMTP envelope",
        "sampleValue": "2aae6c35c94fcfb415dbe95f408b9ce91ee846ed"
      },
      "raw_rcpt_to": {
        "description": "Actual recipient address used on this message's SMTP envelope",
        "sampleValue": "recipient@example.com"
      },
      "rcpt_type": {
        "description": "Indicates that a recipient address appeared in the Cc or Bcc header or the archive JSON array",
        "sampleValue": "cc"
      },
      "recipient_domain": {
        "description": "Domain part of the recipient address used on this message's SMTP envelope",
        "sampleValue": "example.com"
      },
      "recv_method": {
        "description": "Protocol by which SparkPost received this message",
        "sampleValue": "esmtp"
      },
      "routing_domain": {
        "description": "Domain receiving this message",
        "sampleValue": "example.com"
      },
      "sending_domain": {
        "description": "Domain part of the sender or 'From' header in the original email",
        "sampleValue": "example.com"
      },
      "sending_ip": {
        "description": "IP address through which this message was sent",
        "sampleValue": "127.0.0.1"
      },
      "sms_coding": {
        "description": "Data encoding used in the SMS message",
        "sampleValue": "ASCII"
      },
      "sms_dst": { "description": "SMS destination address", "sampleValue": "7876712656" },
      "sms_dst_npi": {
        "description": "Destination numbering plan identification",
        "sampleValue": "E164"
      },
      "sms_dst_ton": {
        "description": "Type of number for the destination address",
        "sampleValue": "International"
      },
      "sms_segments": {
        "description": "Segment number of the log line for large messages sent through multiple SMSes",
        "sampleValue": 5
      },
      "sms_src": { "description": "SMS source address", "sampleValue": "1234" },
      "sms_src_npi": {
        "description": "Source numbering plan identification",
        "sampleValue": "E164"
      },
      "sms_src_ton": {
        "description": "Type of number for the source address",
        "sampleValue": "Unknown"
      },
      "sms_text": {
        "description": "The SMS message payload (in the character set specified in sms_coding)",
        "sampleValue": "lol"
      },
      "subaccount_id": { "description": "Unique subaccount identifier.", "sampleValue": "101" },
      "subject": {
        "description": "Subject line from the email header",
        "sampleValue": "Summer deals are here!"
      },
      "template_id": {
        "description": "Slug of the template used to construct this message",
        "sampleValue": "templ-1234"
      },
      "template_version": {
        "description": "Version of the template used to construct this message",
        "sampleValue": "1"
      },
      "timestamp": {
        "description": "Event date and time, millisecond precision in UTC",
        "sampleValue": "2019-06-16T19:02:09.373Z"
      },
      "transactional": {
        "description": "Indicates if the transmission was marked as transactional",
        "sampleValue": "1"
      },
      "transmission_id": {
        "description": "Transmission which originated this message",
        "sampleValue": "65832150921904138"
      },
      "type": { "description": "Type of event this record describes", "sampleValue": "injection" },
      "display_name": {
        "sampleValue": "Injection",
        "description": "Human readable label for the event name"
      },
      "event_description": {
        "sampleValue": "Message is received by or injected into SparkPost.",
        "description": "Human readable description of the event"
      }
    },
    {
      "customer_id": {
        "description": "SparkPost-customer identifier through which this message was sent",
        "sampleValue": "1"
      },
      "delv_method": {
        "description": "Protocol by which SparkPost delivered this message",
        "sampleValue": "esmtp"
      },
      "dr_latency": {
        "description": "Delivery report latency; interval between message submission and receipt",
        "sampleValue": "0.02"
      },
      "ip_address": {
        "description": "IP address of the host to which SparkPost delivered this message; in engagement events, the IP address of the host where the HTTP request originated",
        "sampleValue": "127.0.0.1"
      },
      "ip_pool": {
        "description": "IP pool through which this message was sent",
        "sampleValue": "example-ip-pool"
      },
      "reason": {
        "description": "Canonicalized text of the response returned by the remote server due to a failed delivery attempt",
        "sampleValue": "MAIL REFUSED - IP (a.b.c.d) is in block list"
      },
      "routing_domain": {
        "description": "Domain receiving this message",
        "sampleValue": "example.com"
      },
      "recv_method": {
        "description": "Protocol by which SparkPost received this message",
        "sampleValue": "esmtp"
      },
      "raw_reason": {
        "description": "Unmodified, exact response returned by the remote server due to a failed delivery attempt",
        "sampleValue": "MAIL REFUSED - IP (17.99.99.99) is in block list"
      },
      "sending_ip": {
        "description": "IP address through which this message was sent",
        "sampleValue": "127.0.0.1"
      },
      "sms_dst": { "description": "SMS destination address", "sampleValue": "7876712656" },
      "sms_dst_npi": {
        "description": "Destination numbering plan identification",
        "sampleValue": "E164"
      },
      "sms_dst_ton": {
        "description": "Type of number for the destination address",
        "sampleValue": "International"
      },
      "sms_remoteids": {
        "description": "The message ID(s) in the response, assigned by the remote server/SMSC",
        "sampleValue": ["0000", "0001", "0002", "0003", "0004"]
      },
      "sms_src": { "description": "SMS source address", "sampleValue": "1234" },
      "sms_src_npi": {
        "description": "Source numbering plan identification",
        "sampleValue": "E164"
      },
      "sms_src_ton": {
        "description": "Type of number for the source address",
        "sampleValue": "Unknown"
      },
      "sms_text": {
        "description": "The SMS message payload (in the character set specified in sms_coding)",
        "sampleValue": "lol"
      },
      "stat_type": {
        "description": "Status type in an SMS status event",
        "sampleValue": "SMSC Delivery"
      },
      "stat_state": {
        "description": "Status value in an SMS status event",
        "sampleValue": "Delivered"
      },
      "subaccount_id": { "description": "Unique subaccount identifier.", "sampleValue": "101" },
      "timestamp": {
        "description": "Event date and time, millisecond precision in UTC",
        "sampleValue": "2019-06-16T19:02:09.373Z"
      },
      "type": { "description": "Type of event this record describes", "sampleValue": "sms_status" },
      "display_name": {
        "sampleValue": "SMS Status",
        "description": "Human readable label for the event name"
      },
      "event_description": {
        "sampleValue": "SMPP/SMS message produced a status log output",
        "description": "Human readable description of the event"
      }
    },
    {
      "ab_test_id": {
        "description": "A/B test of which this event was a part.",
        "sampleValue": "password-reset"
      },
      "ab_test_version": {
        "description": "A/B test version that was used for this event.",
        "sampleValue": "1"
      },
      "campaign_id": {
        "description": "Campaign of which this message was a part",
        "sampleValue": "Example Campaign Name"
      },
      "customer_id": {
        "description": "SparkPost-customer identifier through which this message was sent",
        "sampleValue": "1"
      },
      "delv_method": {
        "description": "Protocol by which SparkPost delivered this message",
        "sampleValue": "esmtp"
      },
      "event_id": { "description": "Unique event identifier", "sampleValue": "92356927693813856" },
      "fbtype": {
        "description": "Type of spam report entered against this message (see [RFC 5965 § 7.3](http://tools.ietf.org/html/rfc5965#section-7.3))",
        "sampleValue": "abuse"
      },
      "friendly_from": {
        "description": "Friendly sender or 'From' header in the original email",
        "sampleValue": "sender@example.com"
      },
      "injection_time": {
        "description": "Time at which this message was injected into SparkPost",
        "sampleValue": "2016-04-18T14:25:07.000Z"
      },
      "ip_address": {
        "description": "IP address of the host to which SparkPost delivered this message; in engagement events, the IP address of the host where the HTTP request originated",
        "sampleValue": "127.0.0.1"
      },
      "ip_pool": {
        "description": "IP pool through which this message was sent",
        "sampleValue": "example-ip-pool"
      },
      "message_id": {
        "description": "SparkPost-cluster-wide unique identifier for this message",
        "sampleValue": "000443ee14578172be22"
      },
      "msg_from": {
        "description": "Sender address used on this message's SMTP envelope",
        "sampleValue": "sender@example.com"
      },
      "msg_size": { "description": "Message's size in bytes", "sampleValue": "1337" },
      "num_retries": {
        "description": "Number of failed attempts before this message was successfully delivered; when the first attempt succeeds, zero",
        "sampleValue": "2"
      },
      "queue_time": {
        "description": "Delay, expressed in milliseconds, between this message's injection into SparkPost and its delivery to the receiving domain; that is, the length of time this message spent in the outgoing queue",
        "sampleValue": "12"
      },
      "rcpt_meta": {
        "description": "Metadata describing the message recipient",
        "sampleValue": { "customKey": "customValue" }
      },
      "rcpt_tags": {
        "description": "Tags applied to the message which generated this event",
        "sampleValue": ["male", "US"]
      },
      "rcpt_to": {
        "description": "Lowercase version of recipient address used on this message's SMTP envelope",
        "sampleValue": "recipient@example.com"
      },
      "rcpt_hash": {
        "description": "Hashed version of recipient address used on this message's SMTP envelope",
        "sampleValue": "2aae6c35c94fcfb415dbe95f408b9ce91ee846ed"
      },
      "raw_rcpt_to": {
        "description": "Actual recipient address used on this message's SMTP envelope",
        "sampleValue": "recipient@example.com"
      },
      "rcpt_type": {
        "description": "Indicates that a recipient address appeared in the Cc or Bcc header or the archive JSON array",
        "sampleValue": "cc"
      },
      "recipient_domain": {
        "description": "Domain part of the recipient address used on this message's SMTP envelope",
        "sampleValue": "example.com"
      },
      "report_by": {
        "description": "Address of the entity reporting this message as spam",
        "sampleValue": "server.email.com"
      },
      "report_to": {
        "description": "Address to which this spam report is to be delivered",
        "sampleValue": "abuse.example.com"
      },
      "routing_domain": {
        "description": "Domain receiving this message",
        "sampleValue": "example.com"
      },
      "sending_domain": {
        "description": "Domain part of the sender or 'From' header in the original email",
        "sampleValue": "example.com"
      },
      "sending_ip": {
        "description": "IP address through which this message was sent",
        "sampleValue": "127.0.0.1"
      },
      "subaccount_id": { "description": "Unique subaccount identifier.", "sampleValue": "101" },
      "subject": {
        "description": "Subject line from the email header",
        "sampleValue": "Summer deals are here!"
      },
      "template_id": {
        "description": "Slug of the template used to construct this message",
        "sampleValue": "templ-1234"
      },
      "template_version": {
        "description": "Version of the template used to construct this message",
        "sampleValue": "1"
      },
      "timestamp": {
        "description": "Event date and time, millisecond precision in UTC",
        "sampleValue": "2019-06-16T19:02:09.373Z"
      },
      "transactional": {
        "description": "Indicates if the transmission was marked as transactional",
        "sampleValue": "1"
      },
      "transmission_id": {
        "description": "Transmission which originated this message",
        "sampleValue": "65832150921904138"
      },
      "type": {
        "description": "Type of event this record describes",
        "sampleValue": "spam_complaint"
      },
      "display_name": {
        "sampleValue": "Spam Complaint",
        "description": "Human readable label for the event name"
      },
      "event_description": {
        "sampleValue": "Message was classified as spam by the recipient.",
        "description": "Human readable description of the event"
      }
    },
    {
      "ab_test_id": {
        "description": "A/B test of which this event was a part.",
        "sampleValue": "password-reset"
      },
      "ab_test_version": {
        "description": "A/B test version that was used for this event.",
        "sampleValue": "1"
      },
      "bounce_class": {
        "description": "Classification code for a given message (see [Bounce Classification Codes](https://support.sparkpost.com/customer/portal/articles/1929896))",
        "sampleValue": "1"
      },
      "campaign_id": {
        "description": "Campaign of which this message was a part",
        "sampleValue": "Example Campaign Name"
      },
      "customer_id": {
        "description": "SparkPost-customer identifier through which this message was sent",
        "sampleValue": "1"
      },
      "delv_method": {
        "description": "Protocol by which SparkPost delivered this message",
        "sampleValue": "esmtp"
      },
      "device_token": {
        "description": "Token of the device / application targeted by this PUSH notification message. Applies only when delv_method is gcm or apn.",
        "sampleValue": "45c19189783f867973f6e6a5cca60061ffe4fa77c547150563a1192fa9847f8a"
      },
      "error_code": {
        "description": "Error code by which the remote server described a failed delivery attempt",
        "sampleValue": "554"
      },
      "event_id": { "description": "Unique event identifier", "sampleValue": "92356927693813856" },
      "friendly_from": {
        "description": "Friendly sender or 'From' header in the original email",
        "sampleValue": "sender@example.com"
      },
      "injection_time": {
        "description": "Time at which this message was injected into SparkPost",
        "sampleValue": "2016-04-18T14:25:07.000Z"
      },
      "ip_address": {
        "description": "IP address of the host to which SparkPost delivered this message; in engagement events, the IP address of the host where the HTTP request originated",
        "sampleValue": "127.0.0.1"
      },
      "ip_pool": {
        "description": "IP pool through which this message was sent",
        "sampleValue": "example-ip-pool"
      },
      "message_id": {
        "description": "SparkPost-cluster-wide unique identifier for this message",
        "sampleValue": "000443ee14578172be22"
      },
      "msg_from": {
        "description": "Sender address used on this message's SMTP envelope",
        "sampleValue": "sender@example.com"
      },
      "msg_size": { "description": "Message's size in bytes", "sampleValue": "1337" },
      "num_retries": {
        "description": "Number of failed attempts before this message was successfully delivered; when the first attempt succeeds, zero",
        "sampleValue": "2"
      },
      "queue_time": {
        "description": "Delay, expressed in milliseconds, between this message's injection into SparkPost and its delivery to the receiving domain; that is, the length of time this message spent in the outgoing queue",
        "sampleValue": "12"
      },
      "raw_rcpt_to": {
        "description": "Actual recipient address used on this message's SMTP envelope",
        "sampleValue": "recipient@example.com"
      },
      "raw_reason": {
        "description": "Unmodified, exact response returned by the remote server due to a failed delivery attempt",
        "sampleValue": "MAIL REFUSED - IP (17.99.99.99) is in block list"
      },
      "rcpt_meta": {
        "description": "Metadata describing the message recipient",
        "sampleValue": { "customKey": "customValue" }
      },
      "rcpt_tags": {
        "description": "Tags applied to the message which generated this event",
        "sampleValue": ["male", "US"]
      },
      "rcpt_to": {
        "description": "Lowercase version of recipient address used on this message's SMTP envelope",
        "sampleValue": "recipient@example.com"
      },
      "rcpt_hash": {
        "description": "Hashed version of recipient address used on this message's SMTP envelope",
        "sampleValue": "2aae6c35c94fcfb415dbe95f408b9ce91ee846ed"
      },
      "reason": {
        "description": "Canonicalized text of the response returned by the remote server due to a failed delivery attempt",
        "sampleValue": "MAIL REFUSED - IP (a.b.c.d) is in block list"
      },
      "recipient_domain": {
        "description": "Domain part of the recipient address used on this message's SMTP envelope",
        "sampleValue": "example.com"
      },
      "recv_method": {
        "description": "Protocol by which SparkPost received this message",
        "sampleValue": "esmtp"
      },
      "routing_domain": {
        "description": "Domain receiving this message",
        "sampleValue": "example.com"
      },
      "sending_domain": {
        "description": "Domain part of the sender or 'From' header in the original email",
        "sampleValue": "example.com"
      },
      "sending_ip": {
        "description": "IP address through which this message was sent",
        "sampleValue": "127.0.0.1"
      },
      "subaccount_id": { "description": "Unique subaccount identifier.", "sampleValue": "101" },
      "subject": {
        "description": "Subject line from the email header",
        "sampleValue": "Summer deals are here!"
      },
      "template_id": {
        "description": "Slug of the template used to construct this message",
        "sampleValue": "templ-1234"
      },
      "template_version": {
        "description": "Version of the template used to construct this message",
        "sampleValue": "1"
      },
      "timestamp": {
        "description": "Event date and time, millisecond precision in UTC",
        "sampleValue": "2019-06-16T19:02:09.373Z"
      },
      "transactional": {
        "description": "Indicates if the transmission was marked as transactional",
        "sampleValue": "1"
      },
      "transmission_id": {
        "description": "Transmission which originated this message",
        "sampleValue": "65832150921904138"
      },
      "type": {
        "description": "Type of event this record describes",
        "sampleValue": "out_of_band"
      },
      "display_name": {
        "sampleValue": "Out of Band",
        "description": "Human readable label for the event name"
      },
      "event_description": {
        "sampleValue": "Remote MTA initially reported acceptance of a message, but it has since asynchronously reported that the message was not delivered.",
        "description": "Human readable description of the event"
      }
    },
    {
      "ab_test_id": {
        "description": "A/B test of which this event was a part.",
        "sampleValue": "password-reset"
      },
      "ab_test_version": {
        "description": "A/B test version that was used for this event.",
        "sampleValue": "1"
      },
      "campaign_id": {
        "description": "Campaign of which this message was a part",
        "sampleValue": "Example Campaign Name"
      },
      "customer_id": {
        "description": "SparkPost-customer identifier through which this message was sent",
        "sampleValue": "1"
      },
      "error_code": {
        "description": "Error code by which the remote server described a failed delivery attempt",
        "sampleValue": "554"
      },
      "event_id": { "description": "Unique event identifier", "sampleValue": "92356927693813856" },
      "friendly_from": {
        "description": "Friendly sender or 'From' header in the original email",
        "sampleValue": "sender@example.com"
      },
      "injection_time": {
        "description": "Time at which this message was injected into SparkPost",
        "sampleValue": "2016-04-18T14:25:07.000Z"
      },
      "ip_pool": {
        "description": "IP pool through which this message was sent",
        "sampleValue": "example-ip-pool"
      },
      "message_id": {
        "description": "SparkPost-cluster-wide unique identifier for this message",
        "sampleValue": "000443ee14578172be22"
      },
      "msg_from": {
        "description": "Sender address used on this message's SMTP envelope",
        "sampleValue": "sender@example.com"
      },
      "rcpt_meta": {
        "description": "Metadata describing the message recipient",
        "sampleValue": { "customKey": "customValue" }
      },
      "rcpt_tags": {
        "description": "Tags applied to the message which generated this event",
        "sampleValue": ["male", "US"]
      },
      "rcpt_to": {
        "description": "Lowercase version of recipient address used on this message's SMTP envelope",
        "sampleValue": "recipient@example.com"
      },
      "rcpt_hash": {
        "description": "Hashed version of recipient address used on this message's SMTP envelope",
        "sampleValue": "2aae6c35c94fcfb415dbe95f408b9ce91ee846ed"
      },
      "raw_rcpt_to": {
        "description": "Actual recipient address used on this message's SMTP envelope",
        "sampleValue": "recipient@example.com"
      },
      "rcpt_type": {
        "description": "Indicates that a recipient address appeared in the Cc or Bcc header or the archive JSON array",
        "sampleValue": "cc"
      },
      "raw_reason": {
        "description": "Unmodified, exact response returned by the remote server due to a failed delivery attempt",
        "sampleValue": "MAIL REFUSED - IP (17.99.99.99) is in block list"
      },
      "reason": {
        "description": "Canonicalized text of the response returned by the remote server due to a failed delivery attempt",
        "sampleValue": "MAIL REFUSED - IP (a.b.c.d) is in block list"
      },
      "recipient_domain": {
        "description": "Domain part of the recipient address used on this message's SMTP envelope",
        "sampleValue": "example.com"
      },
      "recv_method": {
        "description": "Protocol by which SparkPost received this message",
        "sampleValue": "esmtp"
      },
      "remote_addr": {
        "description": "IP address of the host from which SparkPost received this message",
        "sampleValue": "127.0.0.1"
      },
      "sending_domain": {
        "description": "Domain part of the sender or 'From' header in the original email",
        "sampleValue": "example.com"
      },
      "sending_ip": {
        "description": "IP address through which this message was sent",
        "sampleValue": "127.0.0.1"
      },
      "subaccount_id": { "description": "Unique subaccount identifier.", "sampleValue": "101" },
      "template_id": {
        "description": "Slug of the template used to construct this message",
        "sampleValue": "templ-1234"
      },
      "template_version": {
        "description": "Version of the template used to construct this message",
        "sampleValue": "1"
      },
      "timestamp": {
        "description": "Event date and time, millisecond precision in UTC",
        "sampleValue": "2019-06-16T19:02:09.373Z"
      },
      "transactional": {
        "description": "Indicates if the transmission was marked as transactional",
        "sampleValue": "1"
      },
      "transmission_id": {
        "description": "Transmission which originated this message",
        "sampleValue": "65832150921904138"
      },
      "type": {
        "description": "Type of event this record describes",
        "sampleValue": "policy_rejection"
      },
      "bounce_class": {
        "description": "Classification code for a given message (see [Bounce Classification Codes](https://support.sparkpost.com/customer/portal/articles/1929896))",
        "sampleValue": "25"
      },
      "display_name": {
        "sampleValue": "Policy Rejection",
        "description": "Human readable label for the event name"
      },
      "event_description": {
        "sampleValue": "Due to policy, SparkPost rejected a message or failed to generate a message.",
        "description": "Human readable description of the event"
      }
    },
    {
      "amp_enabled": {
        "description": "Indicates whether or not amp format was enabled",
        "sampleValue": true
      },
      "bounce_class": {
        "description": "Classification code for a given message (see [Bounce Classification Codes](https://support.sparkpost.com/customer/portal/articles/1929896))",
        "sampleValue": "1"
      },
      "campaign_id": {
        "description": "Campaign of which this message was a part",
        "sampleValue": "Example Campaign Name"
      },
      "click_tracking": {
        "description": "Indicates whether or not click tracking was enabled",
        "sampleValue": true
      },
      "customer_id": {
        "description": "SparkPost-customer identifier through which this message was sent",
        "sampleValue": "1"
      },
      "delv_method": {
        "description": "Protocol by which SparkPost delivered this message",
        "sampleValue": "esmtp"
      },
      "device_token": {
        "description": "Token of the device / application targeted by this PUSH notification message. Applies only when delv_method is gcm or apn.",
        "sampleValue": "45c19189783f867973f6e6a5cca60061ffe4fa77c547150563a1192fa9847f8a"
      },
      "error_code": {
        "description": "Error code by which the remote server described a failed delivery attempt",
        "sampleValue": "554"
      },
      "event_id": { "description": "Unique event identifier", "sampleValue": "92356927693813856" },
      "friendly_from": {
        "description": "Friendly sender or 'From' header in the original email",
        "sampleValue": "sender@example.com"
      },
      "injection_time": {
        "description": "Time at which this message was injected into SparkPost",
        "sampleValue": "2016-04-18T14:25:07.000Z"
      },
      "initial_pixel": {
        "description": "Indicates whether or not initial open pixel tracking was enabled",
        "sampleValue": true
      },
      "ip_address": {
        "description": "IP address of the host to which SparkPost delivered this message; in engagement events, the IP address of the host where the HTTP request originated",
        "sampleValue": "127.0.0.1"
      },
      "ip_pool": {
        "description": "IP pool through which this message was sent",
        "sampleValue": "example-ip-pool"
      },
      "message_id": {
        "description": "SparkPost-cluster-wide unique identifier for this message",
        "sampleValue": "000443ee14578172be22"
      },
      "msg_from": {
        "description": "Sender address used on this message's SMTP envelope",
        "sampleValue": "sender@example.com"
      },
      "msg_size": { "description": "Message's size in bytes", "sampleValue": "1337" },
      "num_retries": {
        "description": "Number of failed attempts before this message was successfully delivered; when the first attempt succeeds, zero",
        "sampleValue": "2"
      },
      "open_tracking": {
        "description": "Indicates whether or not open tracking was enabled",
        "sampleValue": true
      },
      "outbound_tls": {
        "description": "Whether a message was sent using TLS or not. Specifies if a message wasn't sent with TLS either because no TLS was offered or TLS negotiation failed.",
        "sampleValue": -1
      },
      "queue_time": {
        "description": "Delay, expressed in milliseconds, between this message's injection into SparkPost and its delivery to the receiving domain; that is, the length of time this message spent in the outgoing queue",
        "sampleValue": "12"
      },
      "rcpt_meta": {
        "description": "Metadata describing the message recipient",
        "sampleValue": { "customKey": "customValue" }
      },
      "rcpt_tags": {
        "description": "Tags applied to the message which generated this event",
        "sampleValue": ["male", "US"]
      },
      "rcpt_to": {
        "description": "Lowercase version of recipient address used on this message's SMTP envelope",
        "sampleValue": "recipient@example.com"
      },
      "rcpt_hash": {
        "description": "Hashed version of recipient address used on this message's SMTP envelope",
        "sampleValue": "2aae6c35c94fcfb415dbe95f408b9ce91ee846ed"
      },
      "raw_rcpt_to": {
        "description": "Actual recipient address used on this message's SMTP envelope",
        "sampleValue": "recipient@example.com"
      },
      "rcpt_type": {
        "description": "Indicates that a recipient address appeared in the Cc or Bcc header or the archive JSON array",
        "sampleValue": "cc"
      },
      "raw_reason": {
        "description": "Unmodified, exact response returned by the remote server due to a failed delivery attempt",
        "sampleValue": "MAIL REFUSED - IP (17.99.99.99) is in block list"
      },
      "reason": {
        "description": "Canonicalized text of the response returned by the remote server due to a failed delivery attempt",
        "sampleValue": "MAIL REFUSED - IP (a.b.c.d) is in block list"
      },
      "recipient_domain": {
        "description": "Domain part of the recipient address used on this message's SMTP envelope",
        "sampleValue": "example.com"
      },
      "recv_method": {
        "description": "Protocol by which SparkPost received this message",
        "sampleValue": "esmtp"
      },
      "routing_domain": {
        "description": "Domain receiving this message",
        "sampleValue": "example.com"
      },
      "sending_domain": {
        "description": "Domain part of the sender or 'From' header in the original email",
        "sampleValue": "example.com"
      },
      "sending_ip": {
        "description": "IP address through which this message was sent",
        "sampleValue": "127.0.0.1"
      },
      "sms_coding": {
        "description": "Data encoding used in the SMS message",
        "sampleValue": "ASCII"
      },
      "sms_dst": { "description": "SMS destination address", "sampleValue": "7876712656" },
      "sms_dst_npi": {
        "description": "Destination numbering plan identification",
        "sampleValue": "E164"
      },
      "sms_dst_ton": {
        "description": "Type of number for the destination address",
        "sampleValue": "International"
      },
      "sms_src": { "description": "SMS source address", "sampleValue": "1234" },
      "sms_src_npi": {
        "description": "Source numbering plan identification",
        "sampleValue": "E164"
      },
      "sms_src_ton": {
        "description": "Type of number for the source address",
        "sampleValue": "Unknown"
      },
      "subaccount_id": { "description": "Unique subaccount identifier.", "sampleValue": "101" },
      "subject": {
        "description": "Subject line from the email header",
        "sampleValue": "Summer deals are here!"
      },
      "template_id": {
        "description": "Slug of the template used to construct this message",
        "sampleValue": "templ-1234"
      },
      "template_version": {
        "description": "Version of the template used to construct this message",
        "sampleValue": "1"
      },
      "timestamp": {
        "description": "Event date and time, millisecond precision in UTC",
        "sampleValue": "2019-06-16T19:02:09.373Z"
      },
      "transactional": {
        "description": "Indicates if the transmission was marked as transactional",
        "sampleValue": "1"
      },
      "transmission_id": {
        "description": "Transmission which originated this message",
        "sampleValue": "65832150921904138"
      },
      "type": { "description": "Type of event this record describes", "sampleValue": "delay" },
      "display_name": {
        "sampleValue": "Delay",
        "description": "Human readable label for the event name"
      },
      "event_description": {
        "sampleValue": "Remote MTA has temporarily rejected a message.",
        "description": "Human readable description of the event"
      }
    },
    {
      "ab_test_id": {
        "description": "A/B test of which this event was a part.",
        "sampleValue": "password-reset"
      },
      "ab_test_version": {
        "description": "A/B test version that was used for this event.",
        "sampleValue": "1"
      },
      "amp_enabled": {
        "description": "Indicates whether or not amp format was enabled",
        "sampleValue": true
      },
      "campaign_id": {
        "description": "Campaign of which this message was a part",
        "sampleValue": "Example Campaign Name"
      },
      "click_tracking": {
        "description": "Indicates whether or not click tracking was enabled",
        "sampleValue": true
      },
      "customer_id": {
        "description": "SparkPost-customer identifier through which this message was sent",
        "sampleValue": "1"
      },
      "delv_method": {
        "description": "Protocol by which SparkPost delivered this message",
        "sampleValue": "esmtp"
      },
      "event_id": { "description": "Unique event identifier", "sampleValue": "92356927693813856" },
      "friendly_from": {
        "description": "Friendly sender or 'From' header in the original email",
        "sampleValue": "sender@example.com"
      },
      "geo_ip": {
        "description": "Geographic location based on the IP address, including latitude, longitude, city, country, region, and zip",
        "sampleValue": {
          "country": "US",
          "region": "MD",
          "city": "Columbia",
          "latitude": 39.1749,
          "longitude": -76.8375,
          "zip": "21046",
          "postal_code": "21046"
        }
      },
      "injection_time": {
        "description": "Time at which this message was injected into SparkPost",
        "sampleValue": "2016-04-18T14:25:07.000Z"
      },
      "initial_pixel": {
        "description": "Indicates whether or not initial open pixel tracking was enabled",
        "sampleValue": true
      },
      "ip_address": {
        "description": "IP address of the host to which SparkPost delivered this message; in engagement events, the IP address of the host where the HTTP request originated",
        "sampleValue": "127.0.0.1"
      },
      "ip_pool": {
        "description": "IP pool through which this message was sent",
        "sampleValue": "example-ip-pool"
      },
      "message_id": {
        "description": "SparkPost-cluster-wide unique identifier for this message",
        "sampleValue": "000443ee14578172be22"
      },
      "msg_from": {
        "description": "Sender address used on this message's SMTP envelope",
        "sampleValue": "sender@example.com"
      },
      "msg_size": { "description": "Message's size in bytes", "sampleValue": "1337" },
      "num_retries": {
        "description": "Number of failed attempts before this message was successfully delivered; when the first attempt succeeds, zero",
        "sampleValue": "2"
      },
      "open_tracking": {
        "description": "Indicates whether or not open tracking was enabled",
        "sampleValue": true
      },
      "queue_time": {
        "description": "Delay, expressed in milliseconds, between this message's injection into SparkPost and its delivery to the receiving domain; that is, the length of time this message spent in the outgoing queue",
        "sampleValue": "12"
      },
      "rcpt_meta": {
        "description": "Metadata describing the message recipient",
        "sampleValue": { "customKey": "customValue" }
      },
      "rcpt_tags": {
        "description": "Tags applied to the message which generated this event",
        "sampleValue": ["male", "US"]
      },
      "rcpt_to": {
        "description": "Lowercase version of recipient address used on this message's SMTP envelope",
        "sampleValue": "recipient@example.com"
      },
      "rcpt_hash": {
        "description": "Hashed version of recipient address used on this message's SMTP envelope",
        "sampleValue": "2aae6c35c94fcfb415dbe95f408b9ce91ee846ed"
      },
      "raw_rcpt_to": {
        "description": "Actual recipient address used on this message's SMTP envelope",
        "sampleValue": "recipient@example.com"
      },
      "rcpt_type": {
        "description": "Indicates that a recipient address appeared in the Cc or Bcc header or the archive JSON array",
        "sampleValue": "cc"
      },
      "recipient_domain": {
        "description": "Domain part of the recipient address used on this message's SMTP envelope",
        "sampleValue": "example.com"
      },
      "routing_domain": {
        "description": "Domain receiving this message",
        "sampleValue": "example.com"
      },
      "sending_domain": {
        "description": "Domain part of the sender or 'From' header in the original email",
        "sampleValue": "example.com"
      },
      "sending_ip": {
        "description": "IP address through which this message was sent",
        "sampleValue": "127.0.0.1"
      },
      "subaccount_id": { "description": "Unique subaccount identifier.", "sampleValue": "101" },
      "subject": {
        "description": "Subject line from the email header",
        "sampleValue": "Summer deals are here!"
      },
      "target_link_name": {
        "description": "Name of the link for which a click event was generated",
        "sampleValue": "Example Link Name"
      },
      "target_link_url": {
        "description": "URL of the link for which a click event was generated",
        "sampleValue": "http://example.com"
      },
      "template_id": {
        "description": "Slug of the template used to construct this message",
        "sampleValue": "templ-1234"
      },
      "template_version": {
        "description": "Version of the template used to construct this message",
        "sampleValue": "1"
      },
      "timestamp": {
        "description": "Event date and time, millisecond precision in UTC",
        "sampleValue": "2019-06-16T19:02:09.373Z"
      },
      "transactional": {
        "description": "Indicates if the transmission was marked as transactional",
        "sampleValue": "1"
      },
      "transmission_id": {
        "description": "Transmission which originated this message",
        "sampleValue": "65832150921904138"
      },
      "type": { "description": "Type of event this record describes", "sampleValue": "click" },
      "user_agent": {
        "description": "Value of the browser's User-Agent header",
        "sampleValue": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2272.118 Safari/537.36"
      },
      "display_name": {
        "sampleValue": "Click",
        "description": "Human readable label for the event name"
      },
      "event_description": {
        "sampleValue": "Recipient clicked a tracked link in a message, thus prompting a redirect through the SparkPost click-tracking server to the link's destination.",
        "description": "Human readable description of the event"
      }
    },
    {
      "ab_test_id": {
        "description": "A/B test of which this event was a part.",
        "sampleValue": "password-reset"
      },
      "ab_test_version": {
        "description": "A/B test version that was used for this event.",
        "sampleValue": "1"
      },
      "amp_enabled": {
        "description": "Indicates whether or not amp format was enabled",
        "sampleValue": true
      },
      "campaign_id": {
        "description": "Campaign of which this message was a part",
        "sampleValue": "Example Campaign Name"
      },
      "click_tracking": {
        "description": "Indicates whether or not click tracking was enabled",
        "sampleValue": true
      },
      "customer_id": {
        "description": "SparkPost-customer identifier through which this message was sent",
        "sampleValue": "1"
      },
      "delv_method": {
        "description": "Protocol by which SparkPost delivered this message",
        "sampleValue": "esmtp"
      },
      "event_id": { "description": "Unique event identifier", "sampleValue": "92356927693813856" },
      "friendly_from": {
        "description": "Friendly sender or 'From' header in the original email",
        "sampleValue": "sender@example.com"
      },
      "geo_ip": {
        "description": "Geographic location based on the IP address, including latitude, longitude, city, country, region, and zip",
        "sampleValue": {
          "country": "US",
          "region": "MD",
          "city": "Columbia",
          "latitude": 39.1749,
          "longitude": -76.8375,
          "zip": "21046",
          "postal_code": "21046"
        }
      },
      "injection_time": {
        "description": "Time at which this message was injected into SparkPost",
        "sampleValue": "2016-04-18T14:25:07.000Z"
      },
      "initial_pixel": {
        "description": "Indicates whether or not initial open pixel tracking was enabled",
        "sampleValue": true
      },
      "ip_address": {
        "description": "IP address of the host to which SparkPost delivered this message; in engagement events, the IP address of the host where the HTTP request originated",
        "sampleValue": "127.0.0.1"
      },
      "ip_pool": {
        "description": "IP pool through which this message was sent",
        "sampleValue": "example-ip-pool"
      },
      "message_id": {
        "description": "SparkPost-cluster-wide unique identifier for this message",
        "sampleValue": "000443ee14578172be22"
      },
      "msg_from": {
        "description": "Sender address used on this message's SMTP envelope",
        "sampleValue": "sender@example.com"
      },
      "msg_size": { "description": "Message's size in bytes", "sampleValue": "1337" },
      "num_retries": {
        "description": "Number of failed attempts before this message was successfully delivered; when the first attempt succeeds, zero",
        "sampleValue": "2"
      },
      "open_tracking": {
        "description": "Indicates whether or not open tracking was enabled",
        "sampleValue": true
      },
      "queue_time": {
        "description": "Delay, expressed in milliseconds, between this message's injection into SparkPost and its delivery to the receiving domain; that is, the length of time this message spent in the outgoing queue",
        "sampleValue": "12"
      },
      "rcpt_meta": {
        "description": "Metadata describing the message recipient",
        "sampleValue": { "customKey": "customValue" }
      },
      "rcpt_tags": {
        "description": "Tags applied to the message which generated this event",
        "sampleValue": ["male", "US"]
      },
      "rcpt_to": {
        "description": "Lowercase version of recipient address used on this message's SMTP envelope",
        "sampleValue": "recipient@example.com"
      },
      "rcpt_hash": {
        "description": "Hashed version of recipient address used on this message's SMTP envelope",
        "sampleValue": "2aae6c35c94fcfb415dbe95f408b9ce91ee846ed"
      },
      "raw_rcpt_to": {
        "description": "Actual recipient address used on this message's SMTP envelope",
        "sampleValue": "recipient@example.com"
      },
      "rcpt_type": {
        "description": "Indicates that a recipient address appeared in the Cc or Bcc header or the archive JSON array",
        "sampleValue": "cc"
      },
      "recipient_domain": {
        "description": "Domain part of the recipient address used on this message's SMTP envelope",
        "sampleValue": "example.com"
      },
      "routing_domain": {
        "description": "Domain receiving this message",
        "sampleValue": "example.com"
      },
      "sending_domain": {
        "description": "Domain part of the sender or 'From' header in the original email",
        "sampleValue": "example.com"
      },
      "sending_ip": {
        "description": "IP address through which this message was sent",
        "sampleValue": "127.0.0.1"
      },
      "subaccount_id": { "description": "Unique subaccount identifier.", "sampleValue": "101" },
      "subject": {
        "description": "Subject line from the email header",
        "sampleValue": "Summer deals are here!"
      },
      "template_id": {
        "description": "Slug of the template used to construct this message",
        "sampleValue": "templ-1234"
      },
      "template_version": {
        "description": "Version of the template used to construct this message",
        "sampleValue": "1"
      },
      "timestamp": {
        "description": "Event date and time, millisecond precision in UTC",
        "sampleValue": "2019-06-16T19:02:09.373Z"
      },
      "transactional": {
        "description": "Indicates if the transmission was marked as transactional",
        "sampleValue": "1"
      },
      "transmission_id": {
        "description": "Transmission which originated this message",
        "sampleValue": "65832150921904138"
      },
      "type": { "description": "Type of event this record describes", "sampleValue": "open" },
      "user_agent": {
        "description": "Value of the browser's User-Agent header",
        "sampleValue": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2272.118 Safari/537.36"
      },
      "display_name": {
        "sampleValue": "Open",
        "description": "Human readable label for the event name"
      },
      "event_description": {
        "sampleValue": "Recipient opened a message in a mail client, thus rendering a tracking pixel at the bottom of the message.",
        "description": "Human readable description of the event"
      }
    },
    {
      "ab_test_id": {
        "description": "A/B test of which this event was a part.",
        "sampleValue": "password-reset"
      },
      "ab_test_version": {
        "description": "A/B test version that was used for this event.",
        "sampleValue": "1"
      },
      "amp_enabled": {
        "description": "Indicates whether or not amp format was enabled",
        "sampleValue": true
      },
      "campaign_id": {
        "description": "Campaign of which this message was a part",
        "sampleValue": "Example Campaign Name"
      },
      "click_tracking": {
        "description": "Indicates whether or not click tracking was enabled",
        "sampleValue": true
      },
      "customer_id": {
        "description": "SparkPost-customer identifier through which this message was sent",
        "sampleValue": "1"
      },
      "delv_method": {
        "description": "Protocol by which SparkPost delivered this message",
        "sampleValue": "esmtp"
      },
      "event_id": { "description": "Unique event identifier", "sampleValue": "92356927693813856" },
      "friendly_from": {
        "description": "Friendly sender or 'From' header in the original email",
        "sampleValue": "sender@example.com"
      },
      "geo_ip": {
        "description": "Geographic location based on the IP address, including latitude, longitude, city, country, region, and zip",
        "sampleValue": {
          "country": "US",
          "region": "MD",
          "city": "Columbia",
          "latitude": 39.1749,
          "longitude": -76.8375,
          "zip": "21046",
          "postal_code": "21046"
        }
      },
      "injection_time": {
        "description": "Time at which this message was injected into SparkPost",
        "sampleValue": "2016-04-18T14:25:07.000Z"
      },
      "initial_pixel": {
        "description": "Indicates whether or not initial open pixel tracking was enabled",
        "sampleValue": true
      },
      "ip_address": {
        "description": "IP address of the host to which SparkPost delivered this message; in engagement events, the IP address of the host where the HTTP request originated",
        "sampleValue": "127.0.0.1"
      },
      "ip_pool": {
        "description": "IP pool through which this message was sent",
        "sampleValue": "example-ip-pool"
      },
      "message_id": {
        "description": "SparkPost-cluster-wide unique identifier for this message",
        "sampleValue": "000443ee14578172be22"
      },
      "msg_from": {
        "description": "Sender address used on this message's SMTP envelope",
        "sampleValue": "sender@example.com"
      },
      "msg_size": { "description": "Message's size in bytes", "sampleValue": "1337" },
      "num_retries": {
        "description": "Number of failed attempts before this message was successfully delivered; when the first attempt succeeds, zero",
        "sampleValue": "2"
      },
      "open_tracking": {
        "description": "Indicates whether or not open tracking was enabled",
        "sampleValue": true
      },
      "queue_time": {
        "description": "Delay, expressed in milliseconds, between this message's injection into SparkPost and its delivery to the receiving domain; that is, the length of time this message spent in the outgoing queue",
        "sampleValue": "12"
      },
      "rcpt_meta": {
        "description": "Metadata describing the message recipient",
        "sampleValue": { "customKey": "customValue" }
      },
      "rcpt_tags": {
        "description": "Tags applied to the message which generated this event",
        "sampleValue": ["male", "US"]
      },
      "rcpt_to": {
        "description": "Lowercase version of recipient address used on this message's SMTP envelope",
        "sampleValue": "recipient@example.com"
      },
      "rcpt_hash": {
        "description": "Hashed version of recipient address used on this message's SMTP envelope",
        "sampleValue": "2aae6c35c94fcfb415dbe95f408b9ce91ee846ed"
      },
      "raw_rcpt_to": {
        "description": "Actual recipient address used on this message's SMTP envelope",
        "sampleValue": "recipient@example.com"
      },
      "rcpt_type": {
        "description": "Indicates that a recipient address appeared in the Cc or Bcc header or the archive JSON array",
        "sampleValue": "cc"
      },
      "recipient_domain": {
        "description": "Domain part of the recipient address used on this message's SMTP envelope",
        "sampleValue": "example.com"
      },
      "routing_domain": {
        "description": "Domain receiving this message",
        "sampleValue": "example.com"
      },
      "sending_domain": {
        "description": "Domain part of the sender or 'From' header in the original email",
        "sampleValue": "example.com"
      },
      "sending_ip": {
        "description": "IP address through which this message was sent",
        "sampleValue": "127.0.0.1"
      },
      "subaccount_id": { "description": "Unique subaccount identifier.", "sampleValue": "101" },
      "subject": {
        "description": "Subject line from the email header",
        "sampleValue": "Summer deals are here!"
      },
      "template_id": {
        "description": "Slug of the template used to construct this message",
        "sampleValue": "templ-1234"
      },
      "template_version": {
        "description": "Version of the template used to construct this message",
        "sampleValue": "1"
      },
      "timestamp": {
        "description": "Event date and time, millisecond precision in UTC",
        "sampleValue": "2019-06-16T19:02:09.373Z"
      },
      "transactional": {
        "description": "Indicates if the transmission was marked as transactional",
        "sampleValue": "1"
      },
      "transmission_id": {
        "description": "Transmission which originated this message",
        "sampleValue": "65832150921904138"
      },
      "type": {
        "description": "Type of event this record describes",
        "sampleValue": "initial_open"
      },
      "user_agent": {
        "description": "Value of the browser's User-Agent header",
        "sampleValue": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2272.118 Safari/537.36"
      },
      "display_name": {
        "sampleValue": "Initial Open",
        "description": "Human readable label for the event name"
      },
      "event_description": {
        "sampleValue": "Recipient opened a message in a mail client, thus rendering a tracking pixel at the top of the message.",
        "description": "Human readable description of the event"
      }
    },
    {
      "ab_test_id": {
        "description": "A/B test of which this event was a part.",
        "sampleValue": "password-reset"
      },
      "ab_test_version": {
        "description": "A/B test version that was used for this event.",
        "sampleValue": "1"
      },
      "amp_enabled": {
        "description": "Indicates whether or not amp format was enabled",
        "sampleValue": true
      },
      "campaign_id": {
        "description": "Campaign of which this message was a part",
        "sampleValue": "Example Campaign Name"
      },
      "click_tracking": {
        "description": "Indicates whether or not click tracking was enabled",
        "sampleValue": true
      },
      "customer_id": {
        "description": "SparkPost-customer identifier through which this message was sent",
        "sampleValue": "1"
      },
      "delv_method": {
        "description": "Protocol by which SparkPost delivered this message",
        "sampleValue": "esmtp"
      },
      "event_id": { "description": "Unique event identifier", "sampleValue": "92356927693813856" },
      "friendly_from": {
        "description": "Friendly sender or 'From' header in the original email",
        "sampleValue": "sender@example.com"
      },
      "geo_ip": {
        "description": "Geographic location based on the IP address, including latitude, longitude, city, country, region, and zip",
        "sampleValue": {
          "country": "US",
          "region": "MD",
          "city": "Columbia",
          "latitude": 39.1749,
          "longitude": -76.8375,
          "zip": "21046",
          "postal_code": "21046"
        }
      },
      "injection_time": {
        "description": "Time at which this message was injected into SparkPost",
        "sampleValue": "2016-04-18T14:25:07.000Z"
      },
      "initial_pixel": {
        "description": "Indicates whether or not initial open pixel tracking was enabled",
        "sampleValue": true
      },
      "ip_address": {
        "description": "IP address of the host to which SparkPost delivered this message; in engagement events, the IP address of the host where the HTTP request originated",
        "sampleValue": "127.0.0.1"
      },
      "ip_pool": {
        "description": "IP pool through which this message was sent",
        "sampleValue": "example-ip-pool"
      },
      "message_id": {
        "description": "SparkPost-cluster-wide unique identifier for this message",
        "sampleValue": "000443ee14578172be22"
      },
      "msg_from": {
        "description": "Sender address used on this message's SMTP envelope",
        "sampleValue": "sender@example.com"
      },
      "msg_size": { "description": "Message's size in bytes", "sampleValue": "1337" },
      "num_retries": {
        "description": "Number of failed attempts before this message was successfully delivered; when the first attempt succeeds, zero",
        "sampleValue": "2"
      },
      "open_tracking": {
        "description": "Indicates whether or not open tracking was enabled",
        "sampleValue": true
      },
      "queue_time": {
        "description": "Delay, expressed in milliseconds, between this message's injection into SparkPost and its delivery to the receiving domain; that is, the length of time this message spent in the outgoing queue",
        "sampleValue": "12"
      },
      "rcpt_meta": {
        "description": "Metadata describing the message recipient",
        "sampleValue": { "customKey": "customValue" }
      },
      "rcpt_tags": {
        "description": "Tags applied to the message which generated this event",
        "sampleValue": ["male", "US"]
      },
      "rcpt_to": {
        "description": "Lowercase version of recipient address used on this message's SMTP envelope",
        "sampleValue": "recipient@example.com"
      },
      "rcpt_hash": {
        "description": "Hashed version of recipient address used on this message's SMTP envelope",
        "sampleValue": "2aae6c35c94fcfb415dbe95f408b9ce91ee846ed"
      },
      "raw_rcpt_to": {
        "description": "Actual recipient address used on this message's SMTP envelope",
        "sampleValue": "recipient@example.com"
      },
      "rcpt_type": {
        "description": "Indicates that a recipient address appeared in the Cc or Bcc header or the archive JSON array",
        "sampleValue": "cc"
      },
      "recipient_domain": {
        "description": "Domain part of the recipient address used on this message's SMTP envelope",
        "sampleValue": "example.com"
      },
      "routing_domain": {
        "description": "Domain receiving this message",
        "sampleValue": "example.com"
      },
      "sending_domain": {
        "description": "Domain part of the sender or 'From' header in the original email",
        "sampleValue": "example.com"
      },
      "sending_ip": {
        "description": "IP address through which this message was sent",
        "sampleValue": "127.0.0.1"
      },
      "subaccount_id": { "description": "Unique subaccount identifier.", "sampleValue": "101" },
      "subject": {
        "description": "Subject line from the email header",
        "sampleValue": "Summer deals are here!"
      },
      "target_link_name": {
        "description": "Name of the link for which a click event was generated",
        "sampleValue": "Example Link Name"
      },
      "target_link_url": {
        "description": "URL of the link for which a click event was generated",
        "sampleValue": "http://example.com"
      },
      "template_id": {
        "description": "Slug of the template used to construct this message",
        "sampleValue": "templ-1234"
      },
      "template_version": {
        "description": "Version of the template used to construct this message",
        "sampleValue": "1"
      },
      "timestamp": {
        "description": "Event date and time, millisecond precision in UTC",
        "sampleValue": "2019-06-16T19:02:09.373Z"
      },
      "transactional": {
        "description": "Indicates if the transmission was marked as transactional",
        "sampleValue": "1"
      },
      "transmission_id": {
        "description": "Transmission which originated this message",
        "sampleValue": "65832150921904138"
      },
      "type": { "description": "Type of event this record describes", "sampleValue": "amp_click" },
      "user_agent": {
        "description": "Value of the browser's User-Agent header",
        "sampleValue": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2272.118 Safari/537.36"
      },
      "display_name": {
        "sampleValue": "AMP Click",
        "description": "Human readable label for the event name"
      },
      "event_description": {
        "sampleValue": "Recipient clicked a tracked link in an AMP message, thus prompting a redirect through the SparkPost click-tracking server to the link's destination.",
        "description": "Human readable description of the event"
      }
    },
    {
      "ab_test_id": {
        "description": "A/B test of which this event was a part.",
        "sampleValue": "password-reset"
      },
      "ab_test_version": {
        "description": "A/B test version that was used for this event.",
        "sampleValue": "1"
      },
      "amp_enabled": {
        "description": "Indicates whether or not amp format was enabled",
        "sampleValue": true
      },
      "campaign_id": {
        "description": "Campaign of which this message was a part",
        "sampleValue": "Example Campaign Name"
      },
      "click_tracking": {
        "description": "Indicates whether or not click tracking was enabled",
        "sampleValue": true
      },
      "customer_id": {
        "description": "SparkPost-customer identifier through which this message was sent",
        "sampleValue": "1"
      },
      "delv_method": {
        "description": "Protocol by which SparkPost delivered this message",
        "sampleValue": "esmtp"
      },
      "event_id": { "description": "Unique event identifier", "sampleValue": "92356927693813856" },
      "friendly_from": {
        "description": "Friendly sender or 'From' header in the original email",
        "sampleValue": "sender@example.com"
      },
      "geo_ip": {
        "description": "Geographic location based on the IP address, including latitude, longitude, city, country, region, and zip",
        "sampleValue": {
          "country": "US",
          "region": "MD",
          "city": "Columbia",
          "latitude": 39.1749,
          "longitude": -76.8375,
          "zip": "21046",
          "postal_code": "21046"
        }
      },
      "injection_time": {
        "description": "Time at which this message was injected into SparkPost",
        "sampleValue": "2016-04-18T14:25:07.000Z"
      },
      "initial_pixel": {
        "description": "Indicates whether or not initial open pixel tracking was enabled",
        "sampleValue": true
      },
      "ip_address": {
        "description": "IP address of the host to which SparkPost delivered this message; in engagement events, the IP address of the host where the HTTP request originated",
        "sampleValue": "127.0.0.1"
      },
      "ip_pool": {
        "description": "IP pool through which this message was sent",
        "sampleValue": "example-ip-pool"
      },
      "message_id": {
        "description": "SparkPost-cluster-wide unique identifier for this message",
        "sampleValue": "000443ee14578172be22"
      },
      "msg_from": {
        "description": "Sender address used on this message's SMTP envelope",
        "sampleValue": "sender@example.com"
      },
      "msg_size": { "description": "Message's size in bytes", "sampleValue": "1337" },
      "num_retries": {
        "description": "Number of failed attempts before this message was successfully delivered; when the first attempt succeeds, zero",
        "sampleValue": "2"
      },
      "open_tracking": {
        "description": "Indicates whether or not open tracking was enabled",
        "sampleValue": true
      },
      "queue_time": {
        "description": "Delay, expressed in milliseconds, between this message's injection into SparkPost and its delivery to the receiving domain; that is, the length of time this message spent in the outgoing queue",
        "sampleValue": "12"
      },
      "rcpt_meta": {
        "description": "Metadata describing the message recipient",
        "sampleValue": { "customKey": "customValue" }
      },
      "rcpt_tags": {
        "description": "Tags applied to the message which generated this event",
        "sampleValue": ["male", "US"]
      },
      "rcpt_to": {
        "description": "Lowercase version of recipient address used on this message's SMTP envelope",
        "sampleValue": "recipient@example.com"
      },
      "rcpt_hash": {
        "description": "Hashed version of recipient address used on this message's SMTP envelope",
        "sampleValue": "2aae6c35c94fcfb415dbe95f408b9ce91ee846ed"
      },
      "raw_rcpt_to": {
        "description": "Actual recipient address used on this message's SMTP envelope",
        "sampleValue": "recipient@example.com"
      },
      "rcpt_type": {
        "description": "Indicates that a recipient address appeared in the Cc or Bcc header or the archive JSON array",
        "sampleValue": "cc"
      },
      "recipient_domain": {
        "description": "Domain part of the recipient address used on this message's SMTP envelope",
        "sampleValue": "example.com"
      },
      "routing_domain": {
        "description": "Domain receiving this message",
        "sampleValue": "example.com"
      },
      "sending_domain": {
        "description": "Domain part of the sender or 'From' header in the original email",
        "sampleValue": "example.com"
      },
      "sending_ip": {
        "description": "IP address through which this message was sent",
        "sampleValue": "127.0.0.1"
      },
      "subaccount_id": { "description": "Unique subaccount identifier.", "sampleValue": "101" },
      "subject": {
        "description": "Subject line from the email header",
        "sampleValue": "Summer deals are here!"
      },
      "template_id": {
        "description": "Slug of the template used to construct this message",
        "sampleValue": "templ-1234"
      },
      "template_version": {
        "description": "Version of the template used to construct this message",
        "sampleValue": "1"
      },
      "timestamp": {
        "description": "Event date and time, millisecond precision in UTC",
        "sampleValue": "2019-06-16T19:02:09.373Z"
      },
      "transactional": {
        "description": "Indicates if the transmission was marked as transactional",
        "sampleValue": "1"
      },
      "transmission_id": {
        "description": "Transmission which originated this message",
        "sampleValue": "65832150921904138"
      },
      "type": { "description": "Type of event this record describes", "sampleValue": "amp_open" },
      "user_agent": {
        "description": "Value of the browser's User-Agent header",
        "sampleValue": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2272.118 Safari/537.36"
      },
      "display_name": {
        "sampleValue": "AMP Open",
        "description": "Human readable label for the event name"
      },
      "event_description": {
        "sampleValue": "Recipient opened an AMP message in a mail client, thus rendering a tracking pixel at the bottom of the message.",
        "description": "Human readable description of the event"
      }
    },
    {
      "ab_test_id": {
        "description": "A/B test of which this event was a part.",
        "sampleValue": "password-reset"
      },
      "ab_test_version": {
        "description": "A/B test version that was used for this event.",
        "sampleValue": "1"
      },
      "amp_enabled": {
        "description": "Indicates whether or not amp format was enabled",
        "sampleValue": true
      },
      "campaign_id": {
        "description": "Campaign of which this message was a part",
        "sampleValue": "Example Campaign Name"
      },
      "click_tracking": {
        "description": "Indicates whether or not click tracking was enabled",
        "sampleValue": true
      },
      "customer_id": {
        "description": "SparkPost-customer identifier through which this message was sent",
        "sampleValue": "1"
      },
      "delv_method": {
        "description": "Protocol by which SparkPost delivered this message",
        "sampleValue": "esmtp"
      },
      "event_id": { "description": "Unique event identifier", "sampleValue": "92356927693813856" },
      "friendly_from": {
        "description": "Friendly sender or 'From' header in the original email",
        "sampleValue": "sender@example.com"
      },
      "geo_ip": {
        "description": "Geographic location based on the IP address, including latitude, longitude, city, country, region, and zip",
        "sampleValue": {
          "country": "US",
          "region": "MD",
          "city": "Columbia",
          "latitude": 39.1749,
          "longitude": -76.8375,
          "zip": "21046",
          "postal_code": "21046"
        }
      },
      "injection_time": {
        "description": "Time at which this message was injected into SparkPost",
        "sampleValue": "2016-04-18T14:25:07.000Z"
      },
      "initial_pixel": {
        "description": "Indicates whether or not initial open pixel tracking was enabled",
        "sampleValue": true
      },
      "ip_address": {
        "description": "IP address of the host to which SparkPost delivered this message; in engagement events, the IP address of the host where the HTTP request originated",
        "sampleValue": "127.0.0.1"
      },
      "ip_pool": {
        "description": "IP pool through which this message was sent",
        "sampleValue": "example-ip-pool"
      },
      "message_id": {
        "description": "SparkPost-cluster-wide unique identifier for this message",
        "sampleValue": "000443ee14578172be22"
      },
      "msg_from": {
        "description": "Sender address used on this message's SMTP envelope",
        "sampleValue": "sender@example.com"
      },
      "msg_size": { "description": "Message's size in bytes", "sampleValue": "1337" },
      "num_retries": {
        "description": "Number of failed attempts before this message was successfully delivered; when the first attempt succeeds, zero",
        "sampleValue": "2"
      },
      "open_tracking": {
        "description": "Indicates whether or not open tracking was enabled",
        "sampleValue": true
      },
      "queue_time": {
        "description": "Delay, expressed in milliseconds, between this message's injection into SparkPost and its delivery to the receiving domain; that is, the length of time this message spent in the outgoing queue",
        "sampleValue": "12"
      },
      "rcpt_meta": {
        "description": "Metadata describing the message recipient",
        "sampleValue": { "customKey": "customValue" }
      },
      "rcpt_tags": {
        "description": "Tags applied to the message which generated this event",
        "sampleValue": ["male", "US"]
      },
      "rcpt_to": {
        "description": "Lowercase version of recipient address used on this message's SMTP envelope",
        "sampleValue": "recipient@example.com"
      },
      "rcpt_hash": {
        "description": "Hashed version of recipient address used on this message's SMTP envelope",
        "sampleValue": "2aae6c35c94fcfb415dbe95f408b9ce91ee846ed"
      },
      "raw_rcpt_to": {
        "description": "Actual recipient address used on this message's SMTP envelope",
        "sampleValue": "recipient@example.com"
      },
      "rcpt_type": {
        "description": "Indicates that a recipient address appeared in the Cc or Bcc header or the archive JSON array",
        "sampleValue": "cc"
      },
      "recipient_domain": {
        "description": "Domain part of the recipient address used on this message's SMTP envelope",
        "sampleValue": "example.com"
      },
      "routing_domain": {
        "description": "Domain receiving this message",
        "sampleValue": "example.com"
      },
      "sending_domain": {
        "description": "Domain part of the sender or 'From' header in the original email",
        "sampleValue": "example.com"
      },
      "sending_ip": {
        "description": "IP address through which this message was sent",
        "sampleValue": "127.0.0.1"
      },
      "subaccount_id": { "description": "Unique subaccount identifier.", "sampleValue": "101" },
      "subject": {
        "description": "Subject line from the email header",
        "sampleValue": "Summer deals are here!"
      },
      "template_id": {
        "description": "Slug of the template used to construct this message",
        "sampleValue": "templ-1234"
      },
      "template_version": {
        "description": "Version of the template used to construct this message",
        "sampleValue": "1"
      },
      "timestamp": {
        "description": "Event date and time, millisecond precision in UTC",
        "sampleValue": "2019-06-16T19:02:09.373Z"
      },
      "transactional": {
        "description": "Indicates if the transmission was marked as transactional",
        "sampleValue": "1"
      },
      "transmission_id": {
        "description": "Transmission which originated this message",
        "sampleValue": "65832150921904138"
      },
      "type": {
        "description": "Type of event this record describes",
        "sampleValue": "amp_initial_open"
      },
      "user_agent": {
        "description": "Value of the browser's User-Agent header",
        "sampleValue": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2272.118 Safari/537.36"
      },
      "display_name": {
        "sampleValue": "AMP Initial Open",
        "description": "Human readable label for the event name"
      },
      "event_description": {
        "sampleValue": "Recipient opened an AMP message in a mail client, thus rendering a tracking pixel at the top of the message.",
        "description": "Human readable description of the event"
      }
    },
    {
      "ab_test_id": {
        "description": "A/B test of which this event was a part.",
        "sampleValue": "password-reset"
      },
      "ab_test_version": {
        "description": "A/B test version that was used for this event.",
        "sampleValue": "1"
      },
      "campaign_id": {
        "description": "Campaign of which this message was a part",
        "sampleValue": "Example Campaign Name"
      },
      "customer_id": {
        "description": "SparkPost-customer identifier through which this message was sent",
        "sampleValue": "1"
      },
      "error_code": {
        "description": "Error code by which the remote server described a failed delivery attempt",
        "sampleValue": "554"
      },
      "event_id": { "description": "Unique event identifier", "sampleValue": "92356927693813856" },
      "friendly_from": {
        "description": "Friendly sender or 'From' header in the original email",
        "sampleValue": "sender@example.com"
      },
      "ip_pool": {
        "description": "IP pool through which this message was sent",
        "sampleValue": "example-ip-pool"
      },
      "rcpt_meta": {
        "description": "Metadata describing the message recipient",
        "sampleValue": { "customKey": "customValue" }
      },
      "rcpt_subs": {
        "description": "Substitutions applied to the template to construct this message",
        "sampleValue": { "country": "US", "gender": "Female" }
      },
      "rcpt_tags": {
        "description": "Tags applied to the message which generated this event",
        "sampleValue": ["male", "US"]
      },
      "rcpt_to": {
        "description": "Lowercase version of recipient address used on this message's SMTP envelope",
        "sampleValue": "recipient@example.com"
      },
      "rcpt_hash": {
        "description": "Hashed version of recipient address used on this message's SMTP envelope",
        "sampleValue": "2aae6c35c94fcfb415dbe95f408b9ce91ee846ed"
      },
      "raw_rcpt_to": {
        "description": "Actual recipient address used on this message's SMTP envelope",
        "sampleValue": "recipient@example.com"
      },
      "raw_reason": {
        "description": "Unmodified, exact response returned by the remote server due to a failed delivery attempt",
        "sampleValue": "MAIL REFUSED - IP (17.99.99.99) is in block list"
      },
      "reason": {
        "description": "Canonicalized text of the response returned by the remote server due to a failed delivery attempt",
        "sampleValue": "MAIL REFUSED - IP (a.b.c.d) is in block list"
      },
      "recipient_domain": {
        "description": "Domain part of the recipient address used on this message's SMTP envelope",
        "sampleValue": "example.com"
      },
      "recv_method": {
        "description": "Protocol by which SparkPost received this message",
        "sampleValue": "esmtp"
      },
      "routing_domain": {
        "description": "Domain receiving this message",
        "sampleValue": "example.com"
      },
      "sending_domain": {
        "description": "Domain part of the sender or 'From' header in the original email",
        "sampleValue": "example.com"
      },
      "sending_ip": {
        "description": "IP address through which this message was sent",
        "sampleValue": "127.0.0.1"
      },
      "subaccount_id": { "description": "Unique subaccount identifier.", "sampleValue": "101" },
      "template_id": {
        "description": "Slug of the template used to construct this message",
        "sampleValue": "templ-1234"
      },
      "template_version": {
        "description": "Version of the template used to construct this message",
        "sampleValue": "1"
      },
      "timestamp": {
        "description": "Event date and time, millisecond precision in UTC",
        "sampleValue": "2019-06-16T19:02:09.373Z"
      },
      "transactional": {
        "description": "Indicates if the transmission was marked as transactional",
        "sampleValue": "1"
      },
      "transmission_id": {
        "description": "Transmission which originated this message",
        "sampleValue": "65832150921904138"
      },
      "type": {
        "description": "Type of event this record describes",
        "sampleValue": "generation_failure"
      },
      "display_name": {
        "sampleValue": "Generation Failure",
        "description": "Human readable label for the event name"
      },
      "event_description": {
        "sampleValue": "Message generation failed for an intended recipient.",
        "description": "Human readable description of the event"
      }
    },
    {
      "ab_test_id": {
        "description": "A/B test of which this event was a part.",
        "sampleValue": "password-reset"
      },
      "ab_test_version": {
        "description": "A/B test version that was used for this event.",
        "sampleValue": "1"
      },
      "campaign_id": {
        "description": "Campaign of which this message was a part",
        "sampleValue": "Example Campaign Name"
      },
      "customer_id": {
        "description": "SparkPost-customer identifier through which this message was sent",
        "sampleValue": "1"
      },
      "error_code": {
        "description": "Error code by which the remote server described a failed delivery attempt",
        "sampleValue": "554"
      },
      "event_id": { "description": "Unique event identifier", "sampleValue": "92356927693813856" },
      "friendly_from": {
        "description": "Friendly sender or 'From' header in the original email",
        "sampleValue": "sender@example.com"
      },
      "ip_pool": {
        "description": "IP pool through which this message was sent",
        "sampleValue": "example-ip-pool"
      },
      "rcpt_meta": {
        "description": "Metadata describing the message recipient",
        "sampleValue": { "customKey": "customValue" }
      },
      "rcpt_subs": {
        "description": "Substitutions applied to the template to construct this message",
        "sampleValue": { "country": "US", "gender": "Female" }
      },
      "rcpt_tags": {
        "description": "Tags applied to the message which generated this event",
        "sampleValue": ["male", "US"]
      },
      "rcpt_to": {
        "description": "Lowercase version of recipient address used on this message's SMTP envelope",
        "sampleValue": "recipient@example.com"
      },
      "rcpt_hash": {
        "description": "Hashed version of recipient address used on this message's SMTP envelope",
        "sampleValue": "2aae6c35c94fcfb415dbe95f408b9ce91ee846ed"
      },
      "raw_rcpt_to": {
        "description": "Actual recipient address used on this message's SMTP envelope",
        "sampleValue": "recipient@example.com"
      },
      "raw_reason": {
        "description": "Unmodified, exact response returned by the remote server due to a failed delivery attempt",
        "sampleValue": "MAIL REFUSED - IP (17.99.99.99) is in block list"
      },
      "reason": {
        "description": "Canonicalized text of the response returned by the remote server due to a failed delivery attempt",
        "sampleValue": "MAIL REFUSED - IP (a.b.c.d) is in block list"
      },
      "recipient_domain": {
        "description": "Domain part of the recipient address used on this message's SMTP envelope",
        "sampleValue": "example.com"
      },
      "recv_method": {
        "description": "Protocol by which SparkPost received this message",
        "sampleValue": "esmtp"
      },
      "routing_domain": {
        "description": "Domain receiving this message",
        "sampleValue": "example.com"
      },
      "sending_domain": {
        "description": "Domain part of the sender or 'From' header in the original email",
        "sampleValue": "example.com"
      },
      "sending_ip": {
        "description": "IP address through which this message was sent",
        "sampleValue": "127.0.0.1"
      },
      "subaccount_id": { "description": "Unique subaccount identifier.", "sampleValue": "101" },
      "subject": {
        "description": "Subject line from the email header",
        "sampleValue": "Summer deals are here!"
      },
      "template_id": {
        "description": "Slug of the template used to construct this message",
        "sampleValue": "templ-1234"
      },
      "template_version": {
        "description": "Version of the template used to construct this message",
        "sampleValue": "1"
      },
      "timestamp": {
        "description": "Event date and time, millisecond precision in UTC",
        "sampleValue": "2019-06-16T19:02:09.373Z"
      },
      "transactional": {
        "description": "Indicates if the transmission was marked as transactional",
        "sampleValue": "1"
      },
      "transmission_id": {
        "description": "Transmission which originated this message",
        "sampleValue": "65832150921904138"
      },
      "type": {
        "description": "Type of event this record describes",
        "sampleValue": "generation_rejection"
      },
      "bounce_class": {
        "description": "Classification code for a given message (see [Bounce Classification Codes](https://support.sparkpost.com/customer/portal/articles/1929896))",
        "sampleValue": "25"
      },
      "display_name": {
        "sampleValue": "Generation Rejection",
        "description": "Human readable label for the event name"
      },
      "event_description": {
        "sampleValue": "SparkPost rejected message generation due to policy.",
        "description": "Human readable description of the event"
      }
    },
    {
      "ab_test_id": {
        "description": "A/B test of which this event was a part.",
        "sampleValue": "password-reset"
      },
      "ab_test_version": {
        "description": "A/B test version that was used for this event.",
        "sampleValue": "1"
      },
      "amp_enabled": {
        "description": "Indicates whether or not amp format was enabled",
        "sampleValue": true
      },
      "campaign_id": {
        "description": "Campaign of which this message was a part",
        "sampleValue": "Example Campaign Name"
      },
      "click_tracking": {
        "description": "Indicates whether or not click tracking was enabled",
        "sampleValue": true
      },
      "customer_id": {
        "description": "SparkPost-customer identifier through which this message was sent",
        "sampleValue": "1"
      },
      "event_id": { "description": "Unique event identifier", "sampleValue": "92356927693813856" },
      "friendly_from": {
        "description": "Friendly sender or 'From' header in the original email",
        "sampleValue": "sender@example.com"
      },
      "injection_time": {
        "description": "Time at which this message was injected into SparkPost",
        "sampleValue": "2016-04-18T14:25:07.000Z"
      },
      "initial_pixel": {
        "description": "Indicates whether or not initial open pixel tracking was enabled",
        "sampleValue": true
      },
      "ip_address": {
        "description": "IP address of the host to which SparkPost delivered this message; in engagement events, the IP address of the host where the HTTP request originated",
        "sampleValue": "127.0.0.1"
      },
      "ip_pool": {
        "description": "IP pool through which this message was sent",
        "sampleValue": "example-ip-pool"
      },
      "mailfrom": {
        "description": "Envelope mailfrom of the original email",
        "sampleValue": "recipient@example.com"
      },
      "message_id": {
        "description": "SparkPost-cluster-wide unique identifier for this message",
        "sampleValue": "000443ee14578172be22"
      },
      "msg_from": {
        "description": "Sender address used on this message's SMTP envelope",
        "sampleValue": "sender@example.com"
      },
      "msg_size": { "description": "Message's size in bytes", "sampleValue": "1337" },
      "num_retries": {
        "description": "Number of failed attempts before this message was successfully delivered; when the first attempt succeeds, zero",
        "sampleValue": "2"
      },
      "open_tracking": {
        "description": "Indicates whether or not open tracking was enabled",
        "sampleValue": true
      },
      "queue_time": {
        "description": "Delay, expressed in milliseconds, between this message's injection into SparkPost and its delivery to the receiving domain; that is, the length of time this message spent in the outgoing queue",
        "sampleValue": "12"
      },
      "raw_rcpt_to": {
        "description": "Actual recipient address used on this message's SMTP envelope",
        "sampleValue": "recipient@example.com"
      },
      "rcpt_meta": {
        "description": "Metadata describing the message recipient",
        "sampleValue": { "customKey": "customValue" }
      },
      "rcpt_tags": {
        "description": "Tags applied to the message which generated this event",
        "sampleValue": ["male", "US"]
      },
      "rcpt_to": {
        "description": "Lowercase version of recipient address used on this message's SMTP envelope",
        "sampleValue": "recipient@example.com"
      },
      "rcpt_hash": {
        "description": "Hashed version of recipient address used on this message's SMTP envelope",
        "sampleValue": "2aae6c35c94fcfb415dbe95f408b9ce91ee846ed"
      },
      "rcpt_type": {
        "description": "Indicates that a recipient address appeared in the Cc or Bcc header or the archive JSON array",
        "sampleValue": "cc"
      },
      "recipient_domain": {
        "description": "Domain part of the recipient address used on this message's SMTP envelope",
        "sampleValue": "example.com"
      },
      "recv_method": {
        "description": "Protocol by which SparkPost received this message",
        "sampleValue": "esmtp"
      },
      "routing_domain": {
        "description": "Domain receiving this message",
        "sampleValue": "example.com"
      },
      "sending_domain": {
        "description": "Domain part of the sender or 'From' header in the original email",
        "sampleValue": "example.com"
      },
      "sending_ip": {
        "description": "IP address through which this message was sent",
        "sampleValue": "127.0.0.1"
      },
      "subaccount_id": { "description": "Unique subaccount identifier.", "sampleValue": "101" },
      "subject": {
        "description": "Subject line from the email header",
        "sampleValue": "Summer deals are here!"
      },
      "template_id": {
        "description": "Slug of the template used to construct this message",
        "sampleValue": "templ-1234"
      },
      "template_version": {
        "description": "Version of the template used to construct this message",
        "sampleValue": "1"
      },
      "timestamp": {
        "description": "Event date and time, millisecond precision in UTC",
        "sampleValue": "2019-06-16T19:02:09.373Z"
      },
      "transactional": {
        "description": "Indicates if the transmission was marked as transactional",
        "sampleValue": "1"
      },
      "transmission_id": {
        "description": "Transmission which originated this message",
        "sampleValue": "65832150921904138"
      },
      "type": {
        "description": "Type of event this record describes",
        "sampleValue": "list_unsubscribe"
      },
      "display_name": {
        "sampleValue": "List Unsubscribe",
        "description": "Human readable label for the event name"
      },
      "event_description": {
        "sampleValue": "User clicked the 'unsubscribe' button on an email client.",
        "description": "Human readable description of the event"
      }
    },
    {
      "ab_test_id": {
        "description": "A/B test of which this event was a part.",
        "sampleValue": "password-reset"
      },
      "ab_test_version": {
        "description": "A/B test version that was used for this event.",
        "sampleValue": "1"
      },
      "amp_enabled": {
        "description": "Indicates whether or not amp format was enabled",
        "sampleValue": true
      },
      "campaign_id": {
        "description": "Campaign of which this message was a part",
        "sampleValue": "Example Campaign Name"
      },
      "click_tracking": {
        "description": "Indicates whether or not click tracking was enabled",
        "sampleValue": true
      },
      "customer_id": {
        "description": "SparkPost-customer identifier through which this message was sent",
        "sampleValue": "1"
      },
      "delv_method": {
        "description": "Protocol by which SparkPost delivered this message",
        "sampleValue": "esmtp"
      },
      "event_id": { "description": "Unique event identifier", "sampleValue": "92356927693813856" },
      "friendly_from": {
        "description": "Friendly sender or 'From' header in the original email",
        "sampleValue": "sender@example.com"
      },
      "injection_time": {
        "description": "Time at which this message was injected into SparkPost",
        "sampleValue": "2016-04-18T14:25:07.000Z"
      },
      "initial_pixel": {
        "description": "Indicates whether or not initial open pixel tracking was enabled",
        "sampleValue": true
      },
      "ip_address": {
        "description": "IP address of the host to which SparkPost delivered this message; in engagement events, the IP address of the host where the HTTP request originated",
        "sampleValue": "127.0.0.1"
      },
      "ip_pool": {
        "description": "IP pool through which this message was sent",
        "sampleValue": "example-ip-pool"
      },
      "mailfrom": {
        "description": "Envelope mailfrom of the original email",
        "sampleValue": "recipient@example.com"
      },
      "message_id": {
        "description": "SparkPost-cluster-wide unique identifier for this message",
        "sampleValue": "000443ee14578172be22"
      },
      "msg_from": {
        "description": "Sender address used on this message's SMTP envelope",
        "sampleValue": "sender@example.com"
      },
      "msg_size": { "description": "Message's size in bytes", "sampleValue": "1337" },
      "num_retries": {
        "description": "Number of failed attempts before this message was successfully delivered; when the first attempt succeeds, zero",
        "sampleValue": "2"
      },
      "open_tracking": {
        "description": "Indicates whether or not open tracking was enabled",
        "sampleValue": true
      },
      "queue_time": {
        "description": "Delay, expressed in milliseconds, between this message's injection into SparkPost and its delivery to the receiving domain; that is, the length of time this message spent in the outgoing queue",
        "sampleValue": "12"
      },
      "raw_rcpt_to": {
        "description": "Actual recipient address used on this message's SMTP envelope",
        "sampleValue": "recipient@example.com"
      },
      "rcpt_meta": {
        "description": "Metadata describing the message recipient",
        "sampleValue": { "customKey": "customValue" }
      },
      "rcpt_tags": {
        "description": "Tags applied to the message which generated this event",
        "sampleValue": ["male", "US"]
      },
      "rcpt_to": {
        "description": "Lowercase version of recipient address used on this message's SMTP envelope",
        "sampleValue": "recipient@example.com"
      },
      "rcpt_hash": {
        "description": "Hashed version of recipient address used on this message's SMTP envelope",
        "sampleValue": "2aae6c35c94fcfb415dbe95f408b9ce91ee846ed"
      },
      "rcpt_type": {
        "description": "Indicates that a recipient address appeared in the Cc or Bcc header or the archive JSON array",
        "sampleValue": "cc"
      },
      "recipient_domain": {
        "description": "Domain part of the recipient address used on this message's SMTP envelope",
        "sampleValue": "example.com"
      },
      "recv_method": {
        "description": "Protocol by which SparkPost received this message",
        "sampleValue": "esmtp"
      },
      "routing_domain": {
        "description": "Domain receiving this message",
        "sampleValue": "example.com"
      },
      "sending_domain": {
        "description": "Domain part of the sender or 'From' header in the original email",
        "sampleValue": "example.com"
      },
      "sending_ip": {
        "description": "IP address through which this message was sent",
        "sampleValue": "127.0.0.1"
      },
      "subaccount_id": { "description": "Unique subaccount identifier.", "sampleValue": "101" },
      "subject": {
        "description": "Subject line from the email header",
        "sampleValue": "Summer deals are here!"
      },
      "template_id": {
        "description": "Slug of the template used to construct this message",
        "sampleValue": "templ-1234"
      },
      "template_version": {
        "description": "Version of the template used to construct this message",
        "sampleValue": "1"
      },
      "timestamp": {
        "description": "Event date and time, millisecond precision in UTC",
        "sampleValue": "2019-06-16T19:02:09.373Z"
      },
      "transactional": {
        "description": "Indicates if the transmission was marked as transactional",
        "sampleValue": "1"
      },
      "transmission_id": {
        "description": "Transmission which originated this message",
        "sampleValue": "65832150921904138"
      },
      "type": {
        "description": "Type of event this record describes",
        "sampleValue": "link_unsubscribe"
      },
      "user_agent": {
        "description": "Value of the browser's User-Agent header",
        "sampleValue": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2272.118 Safari/537.36"
      },
      "display_name": {
        "sampleValue": "Link Unsubscribe",
        "description": "Human readable label for the event name"
      },
      "event_description": {
        "sampleValue": "User clicked a hyperlink in a received email.",
        "description": "Human readable description of the event"
      }
    }
  ]
}
